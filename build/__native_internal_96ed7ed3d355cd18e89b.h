#ifndef MYPYC_NATIVE_INTERNAL_96ed7ed3d355cd18e89b_H
#define MYPYC_NATIVE_INTERNAL_96ed7ed3d355cd18e89b_H
#include <Python.h>
#include <CPy.h>
#include "__native_96ed7ed3d355cd18e89b.h"

int CPyGlobalsInit(void);

extern PyObject *CPyStatics[288];
extern const char * const CPyLit_Str[];
extern const char * const CPyLit_Bytes[];
extern const char * const CPyLit_Int[];
extern const double CPyLit_Float[];
extern const double CPyLit_Complex[];
extern const int CPyLit_Tuple[];
extern const int CPyLit_FrozenSet[];
extern CPyModule *CPyModule_faster_eth_abi____codec__internal;
extern CPyModule *CPyModule_faster_eth_abi____codec;
extern PyObject *CPyStatic__codec___globals;
extern CPyModule *CPyModule_builtins;
extern CPyModule *CPyModule_typing;
extern CPyModule *CPyModule_eth_typing;
extern CPyModule *CPyModule_faster_eth_abi___utils___validation__internal;
extern CPyModule *CPyModule_faster_eth_abi___utils___validation;
extern CPyModule *CPyModule_faster_eth_abi____decoding__internal;
extern CPyModule *CPyModule_faster_eth_abi____decoding;
extern PyObject *CPyStatic__decoding___globals;
extern CPyModule *CPyModule_faster_eth_utils;
extern CPyModule *CPyModule_faster_eth_abi___exceptions__internal;
extern CPyModule *CPyModule_faster_eth_abi___exceptions;
extern CPyModule *CPyModule_faster_eth_abi___io;
extern CPyModule *CPyModule_faster_eth_abi____encoding__internal;
extern CPyModule *CPyModule_faster_eth_abi____encoding;
extern PyObject *CPyStatic__encoding___globals;
extern CPyModule *CPyModule_faster_eth_abi___abi__internal;
extern CPyModule *CPyModule_faster_eth_abi___abi;
extern PyObject *CPyStatic_abi___globals;
extern CPyModule *CPyModule_faster_eth_abi___codec;
extern CPyModule *CPyModule_faster_eth_abi___registry;
extern CPyModule *CPyModule_faster_eth_abi___constants__internal;
extern CPyModule *CPyModule_faster_eth_abi___constants;
extern PyObject *CPyStatic_constants___globals;
extern PyObject *CPyStatic_exceptions___globals;
extern CPyModule *CPyModule_parsimonious;
extern CPyModule *CPyModule_faster_eth_abi___from_type_str__internal;
extern CPyModule *CPyModule_faster_eth_abi___from_type_str;
extern PyObject *CPyStatic_from_type_str___globals;
extern CPyModule *CPyModule_functools;
extern CPyModule *CPyModule_faster_eth_abi___grammar;
extern CPyModule *CPyModule_faster_eth_abi___packed__internal;
extern CPyModule *CPyModule_faster_eth_abi___packed;
extern PyObject *CPyStatic_packed___globals;
extern CPyModule *CPyModule_faster_eth_abi___tools__internal;
extern CPyModule *CPyModule_faster_eth_abi___tools;
extern PyObject *CPyStatic_tools___globals;
extern CPyModule *CPyModule_faster_eth_abi___tools____strategies__internal;
extern CPyModule *CPyModule_faster_eth_abi___tools____strategies;
extern PyObject *CPyStatic__strategies___globals;
extern CPyModule *CPyModule_cchecksum;
extern CPyModule *CPyModule_eth_typing___abi;
extern CPyModule *CPyModule_hypothesis;
extern CPyModule *CPyModule_faster_eth_abi___utils___numeric__internal;
extern CPyModule *CPyModule_faster_eth_abi___utils___numeric;
extern CPyModule *CPyModule_faster_eth_abi___utils__internal;
extern CPyModule *CPyModule_faster_eth_abi___utils;
extern PyObject *CPyStatic_utils___globals;
extern PyObject *CPyStatic_numeric___globals;
extern CPyModule *CPyModule_decimal;
extern CPyModule *CPyModule_faster_eth_abi___utils___padding__internal;
extern CPyModule *CPyModule_faster_eth_abi___utils___padding;
extern PyObject *CPyStatic_padding___globals;
extern CPyModule *CPyModule_faster_eth_abi___utils___string__internal;
extern CPyModule *CPyModule_faster_eth_abi___utils___string;
extern PyObject *CPyStatic_string___globals;
extern PyObject *CPyStatic_validation___globals;
extern PyObject *CPyDef__codec___encode_c(PyObject *cpy_r_self, PyObject *cpy_r_types, PyObject *cpy_r_args);
extern PyObject *CPyPy__codec___encode_c(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__codec___decode_c(PyObject *cpy_r_self, PyObject *cpy_r_types, PyObject *cpy_r_data, char cpy_r_strict);
extern PyObject *CPyPy__codec___decode_c(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__codec_____top_level__(void);
extern CPyTagged CPyDef__decoding___decode_uint_256(PyObject *cpy_r_stream);
extern PyObject *CPyPy__decoding___decode_uint_256(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern CPyTagged CPyDef__decoding___get_value_byte_size(PyObject *cpy_r_decoder);
extern PyObject *CPyPy__decoding___get_value_byte_size(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__decoding___decode_head_tail(PyObject *cpy_r_self, PyObject *cpy_r_stream);
extern PyObject *CPyPy__decoding___decode_head_tail(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__decoding___decode_tuple(PyObject *cpy_r_self, PyObject *cpy_r_stream);
extern PyObject *CPyPy__decoding___decode_tuple(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__decoding___decode_sized_array(PyObject *cpy_r_self, PyObject *cpy_r_stream);
extern PyObject *CPyPy__decoding___decode_sized_array(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__decoding___decode_dynamic_array(PyObject *cpy_r_self, PyObject *cpy_r_stream);
extern PyObject *CPyPy__decoding___decode_dynamic_array(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__decoding___read_fixed_byte_size_data_from_stream(PyObject *cpy_r_self, PyObject *cpy_r_stream);
extern PyObject *CPyPy__decoding___read_fixed_byte_size_data_from_stream(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern tuple_T2OO CPyDef__decoding___split_data_and_padding_fixed_byte_size(PyObject *cpy_r_self, PyObject *cpy_r_raw_data);
extern PyObject *CPyPy__decoding___split_data_and_padding_fixed_byte_size(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__decoding___validate_padding_bytes_fixed_byte_size(PyObject *cpy_r_self, PyObject *cpy_r_value, PyObject *cpy_r_padding_bytes);
extern PyObject *CPyPy__decoding___validate_padding_bytes_fixed_byte_size(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__decoding___decoder_fn_boolean(PyObject *cpy_r_data);
extern PyObject *CPyPy__decoding___decoder_fn_boolean(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__decoding_____top_level__(void);
extern PyObject *CPyDef__encoding___encode_tuple(PyObject *cpy_r_values, PyObject *cpy_r_encoders);
extern PyObject *CPyPy__encoding___encode_tuple(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__encoding___encode_fixed(PyObject *cpy_r_value, PyObject *cpy_r_encode_fn, char cpy_r_is_big_endian, CPyTagged cpy_r_data_byte_size);
extern PyObject *CPyPy__encoding___encode_fixed(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__encoding___encode_signed(PyObject *cpy_r_value, PyObject *cpy_r_encode_fn, CPyTagged cpy_r_data_byte_size);
extern PyObject *CPyPy__encoding___encode_signed(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__encoding___encode_elements(PyObject *cpy_r_item_encoder, PyObject *cpy_r_value);
extern PyObject *CPyPy__encoding___encode_elements(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__encoding___encode_elements_dynamic(PyObject *cpy_r_item_encoder, PyObject *cpy_r_value);
extern PyObject *CPyPy__encoding___encode_elements_dynamic(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__encoding___encode_uint_256(CPyTagged cpy_r_i);
extern PyObject *CPyPy__encoding___encode_uint_256(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__encoding___int_to_big_endian(CPyTagged cpy_r_value);
extern PyObject *CPyPy__encoding___int_to_big_endian(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__encoding_____top_level__(void);
extern PyObject *CPyStatic_abi___default_codec;
extern PyObject *CPyStatic_abi___encode;
extern PyObject *CPyStatic_abi___decode;
extern PyObject *CPyStatic_abi___is_encodable;
extern PyObject *CPyStatic_abi___is_encodable_type;
extern char CPyDef_abi_____top_level__(void);
extern char CPyDef_constants_____top_level__(void);
extern PyTypeObject *CPyType_exceptions___EncodingError;
extern PyTypeObject *CPyType_exceptions___EncodingTypeError;
extern PyTypeObject *CPyType_exceptions___IllegalValue;
extern PyTypeObject *CPyType_exceptions___ValueOutOfBounds;
extern PyTypeObject *CPyType_exceptions___DecodingError;
extern PyTypeObject *CPyType_exceptions___InsufficientDataBytes;
extern PyTypeObject *CPyType_exceptions___NonEmptyPaddingBytes;
extern PyTypeObject *CPyType_exceptions___InvalidPointer;
extern PyTypeObject *CPyType_exceptions___ParseError;
extern PyObject *CPyDef_exceptions___ParseError(void);
extern PyTypeObject *CPyType_exceptions___ABITypeError;
extern PyTypeObject *CPyType_exceptions___PredicateMappingError;
extern PyTypeObject *CPyType_exceptions___NoEntriesFound;
extern PyTypeObject *CPyType_exceptions___MultipleEntriesFound;
extern PyObject *CPyDef_exceptions___ParseError_____str__(PyObject *cpy_r_self);
extern PyObject *CPyPy_exceptions___ParseError_____str__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_exceptions_____top_level__(void);
extern PyTypeObject *CPyType_from_type_str___parse_type_str_env;
extern PyObject *CPyDef_from_type_str___parse_type_str_env(void);
extern CPyThreadLocal faster_eth_abi___from_type_str___parse_type_str_envObject *from_type_str___parse_type_str_env_free_instance;
extern PyTypeObject *CPyType_from_type_str___decorator_parse_type_str_env;
extern PyObject *CPyDef_from_type_str___decorator_parse_type_str_env(void);
extern CPyThreadLocal faster_eth_abi___from_type_str___decorator_parse_type_str_envObject *from_type_str___decorator_parse_type_str_env_free_instance;
extern PyTypeObject *CPyType_from_type_str___decorator_parse_type_str_obj;
extern PyObject *CPyDef_from_type_str___decorator_parse_type_str_obj(void);
extern CPyThreadLocal faster_eth_abi___from_type_str___decorator_parse_type_str_objObject *from_type_str___decorator_parse_type_str_obj_free_instance;
extern PyTypeObject *CPyType_from_type_str___new_from_type_str_parse_type_str_decorator_obj;
extern PyObject *CPyDef_from_type_str___new_from_type_str_parse_type_str_decorator_obj(void);
extern CPyThreadLocal faster_eth_abi___from_type_str___new_from_type_str_parse_type_str_decorator_objObject *from_type_str___new_from_type_str_parse_type_str_decorator_obj_free_instance;
extern PyTypeObject *CPyType_from_type_str___parse_tuple_type_str_env;
extern PyObject *CPyDef_from_type_str___parse_tuple_type_str_env(void);
extern CPyThreadLocal faster_eth_abi___from_type_str___parse_tuple_type_str_envObject *from_type_str___parse_tuple_type_str_env_free_instance;
extern PyTypeObject *CPyType_from_type_str___new_from_type_str_parse_tuple_type_str_obj;
extern PyObject *CPyDef_from_type_str___new_from_type_str_parse_tuple_type_str_obj(void);
extern CPyThreadLocal faster_eth_abi___from_type_str___new_from_type_str_parse_tuple_type_str_objObject *from_type_str___new_from_type_str_parse_tuple_type_str_obj_free_instance;
extern PyObject *CPyDef_from_type_str___new_from_type_str_parse_type_str_decorator_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_from_type_str___new_from_type_str_parse_type_str_decorator_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_from_type_str___new_from_type_str_parse_type_str_decorator_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_cls, PyObject *cpy_r_type_str, PyObject *cpy_r_registry);
extern PyObject *CPyPy_from_type_str___new_from_type_str_parse_type_str_decorator_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_from_type_str___decorator_parse_type_str_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_from_type_str___decorator_parse_type_str_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_from_type_str___decorator_parse_type_str_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_old_from_type_str);
extern PyObject *CPyPy_from_type_str___decorator_parse_type_str_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_from_type_str___parse_type_str(PyObject *cpy_r_expected_base, char cpy_r_with_arrlist);
extern PyObject *CPyPy_from_type_str___parse_type_str(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_from_type_str___new_from_type_str_parse_tuple_type_str_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_from_type_str___new_from_type_str_parse_tuple_type_str_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_from_type_str___new_from_type_str_parse_tuple_type_str_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_cls, PyObject *cpy_r_type_str, PyObject *cpy_r_registry);
extern PyObject *CPyPy_from_type_str___new_from_type_str_parse_tuple_type_str_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_from_type_str___parse_tuple_type_str(PyObject *cpy_r_old_from_type_str);
extern PyObject *CPyPy_from_type_str___parse_tuple_type_str(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_from_type_str_____top_level__(void);
extern PyObject *CPyStatic_packed___default_encoder_packed;
extern PyObject *CPyStatic_packed___encode_packed;
extern PyObject *CPyStatic_packed___is_encodable_packed;
extern char CPyDef_packed_____top_level__(void);
extern char CPyDef_tools_____top_level__(void);
extern PyObject *CPyStatic__strategies___address_strategy;
extern PyObject *CPyStatic__strategies___bool_strategy;
extern PyObject *CPyStatic__strategies___bytes_strategy;
extern PyObject *CPyStatic__strategies___string_strategy;
extern PyObject *CPyStatic__strategies___strategy_registry;
extern PyObject *CPyStatic__strategies___get_abi_strategy;
extern PyTypeObject *CPyType__strategies___StrategyRegistry;
extern PyObject *CPyDef__strategies___StrategyRegistry(void);
extern char CPyDef__strategies___StrategyRegistry_____init__(PyObject *cpy_r_self);
extern PyObject *CPyPy__strategies___StrategyRegistry_____init__(PyObject *self, PyObject *args, PyObject *kw);
extern char CPyDef__strategies___StrategyRegistry___register_strategy(PyObject *cpy_r_self, PyObject *cpy_r_lookup, PyObject *cpy_r_registration, PyObject *cpy_r_label);
extern PyObject *CPyPy__strategies___StrategyRegistry___register_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__strategies___StrategyRegistry___unregister_strategy(PyObject *cpy_r_self, PyObject *cpy_r_lookup_or_label);
extern PyObject *CPyPy__strategies___StrategyRegistry___unregister_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___StrategyRegistry___get_strategy(PyObject *cpy_r_self, PyObject *cpy_r_type_str);
extern PyObject *CPyPy__strategies___StrategyRegistry___get_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___get_uint_strategy(PyObject *cpy_r_abi_type, PyObject *cpy_r_registry);
extern PyObject *CPyPy__strategies___get_uint_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___get_int_strategy(PyObject *cpy_r_abi_type, PyObject *cpy_r_registry);
extern PyObject *CPyPy__strategies___get_int_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___get_ufixed_strategy(PyObject *cpy_r_abi_type, PyObject *cpy_r_registry);
extern PyObject *CPyPy__strategies___get_ufixed_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___get_fixed_strategy(PyObject *cpy_r_abi_type, PyObject *cpy_r_registry);
extern PyObject *CPyPy__strategies___get_fixed_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___get_bytes_strategy(PyObject *cpy_r_abi_type, PyObject *cpy_r_registry);
extern PyObject *CPyPy__strategies___get_bytes_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___get_array_strategy(PyObject *cpy_r_abi_type, PyObject *cpy_r_registry);
extern PyObject *CPyPy__strategies___get_array_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef__strategies___get_tuple_strategy(PyObject *cpy_r_abi_type, PyObject *cpy_r_registry);
extern PyObject *CPyPy__strategies___get_tuple_strategy(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef__strategies_____top_level__(void);
extern char CPyDef_utils_____top_level__(void);
extern PyObject *CPyStatic_numeric___abi_decimal_context;
extern PyObject *CPyStatic_numeric___ZERO;
extern PyObject *CPyStatic_numeric___TEN;
extern PyObject *CPyStatic_numeric___Decimal;
extern PyTypeObject *CPyType_numeric___scale_places_env;
extern PyObject *CPyDef_numeric___scale_places_env(void);
extern CPyThreadLocal faster_eth_abi___utils___numeric___scale_places_envObject *numeric___scale_places_env_free_instance;
extern PyTypeObject *CPyType_numeric___f_scale_places_obj;
extern PyObject *CPyDef_numeric___f_scale_places_obj(void);
extern CPyThreadLocal faster_eth_abi___utils___numeric___f_scale_places_objObject *numeric___f_scale_places_obj_free_instance;
extern CPyTagged CPyDef_numeric___ceil32(CPyTagged cpy_r_x);
extern PyObject *CPyPy_numeric___ceil32(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern tuple_T2II CPyDef_numeric___compute_unsigned_integer_bounds(CPyTagged cpy_r_num_bits);
extern PyObject *CPyPy_numeric___compute_unsigned_integer_bounds(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern tuple_T2II CPyDef_numeric___compute_signed_integer_bounds(CPyTagged cpy_r_num_bits);
extern PyObject *CPyPy_numeric___compute_signed_integer_bounds(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern tuple_T2OO CPyDef_numeric___compute_unsigned_fixed_bounds(CPyTagged cpy_r_num_bits, CPyTagged cpy_r_frac_places);
extern PyObject *CPyPy_numeric___compute_unsigned_fixed_bounds(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern tuple_T2OO CPyDef_numeric___compute_signed_fixed_bounds(CPyTagged cpy_r_num_bits, CPyTagged cpy_r_frac_places);
extern PyObject *CPyPy_numeric___compute_signed_fixed_bounds(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_numeric___f_scale_places_obj_____get__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_instance, PyObject *cpy_r_owner);
extern PyObject *CPyPy_numeric___f_scale_places_obj_____get__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_numeric___f_scale_places_obj_____call__(PyObject *cpy_r___mypyc_self__, PyObject *cpy_r_x);
extern PyObject *CPyPy_numeric___f_scale_places_obj_____call__(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_numeric___scale_places(CPyTagged cpy_r_places);
extern PyObject *CPyPy_numeric___scale_places(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_numeric_____top_level__(void);
extern PyObject *CPyDef_padding___zpad(PyObject *cpy_r_value, CPyTagged cpy_r_length);
extern PyObject *CPyPy_padding___zpad(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_padding___zpad32(PyObject *cpy_r_value);
extern PyObject *CPyPy_padding___zpad32(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_padding___zpad_right(PyObject *cpy_r_value, CPyTagged cpy_r_length);
extern PyObject *CPyPy_padding___zpad_right(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_padding___zpad32_right(PyObject *cpy_r_value);
extern PyObject *CPyPy_padding___zpad32_right(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_padding___fpad(PyObject *cpy_r_value, CPyTagged cpy_r_length);
extern PyObject *CPyPy_padding___fpad(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern PyObject *CPyDef_padding___fpad32(PyObject *cpy_r_value);
extern PyObject *CPyPy_padding___fpad32(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_padding_____top_level__(void);
extern PyObject *CPyDef_string___abbr(PyObject *cpy_r_value, CPyTagged cpy_r_limit);
extern PyObject *CPyPy_string___abbr(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_string_____top_level__(void);
extern char CPyDef_validation___validate_bytes_param(PyObject *cpy_r_param, PyObject *cpy_r_param_name);
extern PyObject *CPyPy_validation___validate_bytes_param(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_validation___validate_list_like_param(PyObject *cpy_r_param, PyObject *cpy_r_param_name);
extern PyObject *CPyPy_validation___validate_list_like_param(PyObject *self, PyObject *const *args, size_t nargs, PyObject *kwnames);
extern char CPyDef_validation_____top_level__(void);
#endif
