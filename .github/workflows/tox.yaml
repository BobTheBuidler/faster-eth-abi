name: Tox

on:
  pull_request:
    branches:
      - master
    paths:
      - 'faster_eth_abi/**.py'
      - 'tests/**.py'
      - '.github/workflows/tox.yaml'
      - 'pyproject.toml'
      - 'setup.py'
      - 'tox.ini'
  schedule:
    - cron: '0 11 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test (${{ matrix.jobtype }}, ${{ matrix.python-version }}, ${{ matrix.os }}, ${{ matrix.architecture }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14", "3.13-t", "3.14-t"]
        jobtype: [core, lint, wheel]
        architecture: [x64, x86]
      exclude:
        # Exclude x86 (32-bit) builds for macos, which doesn't support 32-bit at all
        - os: macos-latest
          architecture: x86
    env:
      IS_UBUNTU_32BIT: ${{ matrix.os == 'ubuntu-latest' && matrix.architecture == 'x86' }}
      TOXENV: py${{ matrix.python-version }}-${{ matrix.jobtype }}
      TOX_RECREATE_FLAG: ${{ github.event_name == 'schedule' && '-r' || '' }}

    steps:
      - uses: actions/checkout@v4

      # Use i386/python Docker for *all* 32-bit Ubuntu jobs (not just core now)
      - name: Run job in 32-bit Ubuntu Docker container
        if: ${{ env.IS_UBUNTU_32BIT == 'true' }}
        uses: addnab/docker-run-action@v3
        with:
          image: i386/python:${{ matrix.python-version }}
          shell: bash
          options: -v ${{ github.workspace }}:/workspace -w /workspace
          run: |
            python -m pip install --upgrade pip
            python -m pip install tox
            python -m tox run ${{ env.TOX_RECREATE_FLAG }}

      # All other builds (64-bit Linux, Mac, Win; 32-bit Windows)
      - name: Set up Python
        if: ${{ env.IS_UBUNTU_32BIT != 'true' }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
          cache: pip
          cache-dependency-path: |
            setup.py
            pyproject.toml
            tox.ini

      - name: Upgrade pip and install tox
        if: ${{ env.IS_UBUNTU_32BIT != 'true' }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox

      - name: Cache tox environment and hypothesis examples
        if: ${{ env.IS_UBUNTU_32BIT != 'true' }}
        uses: actions/cache@v4
        with:
          path: |
            .tox
            .hypothesis
          key: ${{ runner.os }}-tox-${{ hashFiles('pyproject.toml', 'setup.py', 'tox.ini') }}-${{ matrix.python-version }}-${{ matrix.jobtype }}
          save-always: ${{ env.TOX_RECREATE_FLAG == '-r' }}

      - name: Run tox
        if: ${{ env.IS_UBUNTU_32BIT != 'true' }}
        run: python -m tox run ${{ env.TOX_RECREATE_FLAG }}
